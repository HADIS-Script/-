local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25) local v26={};for v42=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v42,v42 + 1 )),v1(v2(v25,1 + (v42% #v25) ,1 + (v42% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function() return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...) local v29=0;local v30;local v31;local v32;local v33;local v34;local v35;local v36;local v37;local v38;local v39;local v40;local v41;while true do if (v29==3) then function v36() local v43=0;local v44;local v45;local v46;local v47;local v48;local v49;while true do if (0==v43) then v44=v35();v45=v35();v43=1;end if (v43==2) then v48=v32(v45,21,31);v49=((v32(v45,32)==1) and  -1) or (620 -(555 + 64)) ;v43=3;end if (1==v43) then v46=1;v47=(v32(v45,1,20) * (2^32)) + v44 ;v43=2;end if (3==v43) then if (v48==0) then if (v47==0) then return v49 * 0 ;else local v118=0;while true do if (v118==0) then v48=1;v46=0;break;end end end elseif (v48==(2978 -(857 + 74))) then return ((v47==0) and (v49 * (1/0))) or (v49 * NaN) ;end return v16(v49,v48-1023 ) * (v46 + (v47/(2^52))) ;end end end v37=nil;function v37(v50) local v51;if  not v50 then v50=v35();if (v50==0) then return "";end end v51=v11(v27,v30,(v30 + v50) -(569 -(367 + 201)) );v30=v30 + v50 ;local v52={};for v78=1, #v51 do v52[v78]=v10(v9(v11(v51,v78,v78)));end return v14(v52);end v38=v35;v29=4;end if (v29==1) then function v32(v53,v54,v55) if v55 then local v80=0;local v81;while true do if (v80==0) then v81=(v53/(2^(v54-1)))%(2^(((v55-1) -(v54-1)) + 1)) ;return v81-(v81%(2 -1)) ;end end else local v82=2^(v54-(2 -1)) ;return (((v53%(v82 + v82))>=v82) and 1) or 0 ;end end v33=nil;function v33() local v56=v9(v27,v30,v30);v30=v30 + 1 ;return v56;end v34=nil;v29=2;end if (v29==0) then v30=1;v31=nil;v27=v12(v11(v27,5),v7("\201\96","\24\231\78\183\113\226"),function(v57) if (v9(v57,2)==79) then local v83=0;while true do if (v83==0) then v31=v8(v11(v57,1,1));return "";end end else local v84=0;local v85;while true do if (v84==0) then v85=v10(v8(v57,16));if v31 then local v119=0;local v120;while true do if (v119==0) then v120=v13(v85,v31);v31=nil;v119=1;end if (v119==1) then return v120;end end else return v85;end break;end end end end);v32=nil;v29=1;end if (v29==5) then v41=nil;function v41(v58,v59,v60) local v61=0;local v62;local v63;local v64;while true do if (v61==1) then v64=v58[3];return function(...) local v90=v62;local v91=v63;local v92=v64;local v93=v39;local v94=1;local v95= -1;local v96={};local v97={...};local v98=v20("#",...) -1 ;local v99={};local v100={};for v112=0,v98 do if (v112>=v92) then v96[v112-v92 ]=v97[v112 + 1 ];else v100[v112]=v97[v112 + 1 ];end end local v101=(v98-v92) + 1 ;local v102;local v103;while true do local v113=0;while true do if (v113==1) then if (v103<=37) then if (v103<=(1083 -(68 + 997))) then if (v103<=8) then if (v103<=3) then if (v103<=1) then if (v103==0) then local v140=v102[1272 -(226 + 1044) ];local v141,v142=v93(v100[v140](v21(v100,v140 + 1 ,v102[3])));v95=(v142 + v140) -1 ;local v143=0;for v226=v140,v95 do local v227=0;while true do if (0==v227) then v143=v143 + 1 ;v100[v226]=v141[v143];break;end end end elseif v100[v102[2]] then v94=v94 + 1 ;else v94=v102[3];end elseif (v103==2) then if  not v100[v102[2]] then v94=v94 + (4 -3) ;else v94=v102[3];end else v100[v102[2]]=v100[v102[3]]%v102[4] ;end elseif (v103<=(122 -(32 + 85))) then if (v103>4) then v100[v102[2]][v100[v102[3]]]=v102[4];else local v147=0;local v148;while true do if (v147==0) then v148=v102[2];v100[v148](v21(v100,v148 + 1 ,v95));break;end end end elseif (v103<=6) then do return;end elseif (v103>7) then v100[v102[2]]=v102[3] + v100[v102[4]] ;else v100[v102[2]]=v100[v102[3]] + v102[4] ;end elseif (v103<=(13 + 0)) then if (v103<=10) then if (v103==9) then v100[v102[1 + 1 ]]=v100[v102[3]] + v102[4] ;else local v150=v102[959 -(892 + 65) ];v100[v150](v100[v150 + 1 ]);end elseif (v103<=11) then v100[v102[2]]= #v100[v102[3]];elseif (v103>12) then local v249=v102[2];local v250=v100[v249];for v295=v249 + 1 ,v95 do v15(v250,v100[v295]);end else v100[v102[2]]=v100[v102[3]]%v100[v102[4]] ;end elseif (v103<=15) then if (v103>14) then v100[v102[4 -2 ]]=v60[v102[3]];else v100[v102[2]]=v100[v102[3]];end elseif (v103<=16) then v100[v102[2]]=v100[v102[3]];elseif (v103==17) then local v252=v102[2];local v253,v254=v93(v100[v252](v100[v252 + 1 ]));v95=(v254 + v252) -1 ;local v255=0;for v296=v252,v95 do v255=v255 + 1 ;v100[v296]=v253[v255];end else do return;end end elseif (v103<=27) then if (v103<=22) then if (v103<=(36 -16)) then if (v103==19) then local v158=v91[v102[3]];local v159;local v160={};v159=v18({},{[v7("\117\227\73\87\161\79\196","\197\42\188\32\57")]=function(v228,v229) local v230=0;local v231;while true do if (v230==0) then v231=v160[v229];return v231[1][v231[2]];end end end,[v7("\41\203\14\72\76\39\186\62\19\236","\90\118\148\96\45\59\78\212")]=function(v232,v233,v234) local v235=0;local v236;while true do if (v235==0) then v236=v160[v233];v236[1][v236[2]]=v234;break;end end end});for v237=1 -0 ,v102[354 -(87 + 263) ] do local v238=0;local v239;while true do if (v238==1) then if (v239[1]==14) then v160[v237-1 ]={v100,v239[3]};else v160[v237-1 ]={v59,v239[3]};end v99[ #v99 + 1 ]=v160;break;end if (v238==0) then v94=v94 + 1 ;v239=v90[v94];v238=1;end end end v100[v102[2]]=v41(v158,v159,v60);else local v162=0;local v163;local v164;local v165;local v166;while true do if (2==v162) then for v326=v163,v95 do v166=v166 + 1 ;v100[v326]=v164[v166];end break;end if (v162==0) then v163=v102[2];v164,v165=v93(v100[v163](v100[v163 + 1 ]));v162=1;end if (v162==1) then v95=(v165 + v163) -1 ;v166=0;v162=2;end end end elseif (v103==21) then v100[v102[2 + 0 ]]=v100[v102[3]][v102[4]];else local v169=v102[4 -2 ];v100[v169]=v100[v169](v21(v100,v169 + 1 ,v102[3]));end elseif (v103<=24) then if (v103>23) then v100[v102[2]]=v102[3 + 0 ];else local v173=0;local v174;local v175;while true do if (v173==1) then v100[v174 + (3 -2) ]=v175;v100[v174]=v175[v102[4]];break;end if (v173==0) then v174=v102[2];v175=v100[v102[3]];v173=1;end end end elseif (v103<=(977 -(802 + 150))) then if (v100[v102[2]]==v102[4]) then v94=v94 + 1 ;else v94=v102[7 -4 ];end elseif (v103>26) then local v257=0;local v258;local v259;local v260;while true do if (v257==0) then v258=v102[2];v259=v100[v258];v257=1;end if (v257==1) then v260=v100[v258 + 2 ];if (v260>0) then if (v259>v100[v258 + 1 ]) then v94=v102[3];else v100[v258 + (5 -2) ]=v259;end elseif (v259<v100[v258 + 1 + 0 ]) then v94=v102[1000 -(915 + 82) ];else v100[v258 + 3 ]=v259;end break;end end else local v261=0;local v262;local v263;local v264;while true do if (v261==0) then v262=v102[2];v263=v100[v262 + 2 ];v261=1;end if (v261==2) then if (v263>(0 -0)) then if (v264<=v100[v262 + 1 + 0 ]) then v94=v102[3];v100[v262 + 3 ]=v264;end elseif (v264>=v100[v262 + 1 ]) then local v377=0;while true do if (v377==0) then v94=v102[3];v100[v262 + 3 ]=v264;break;end end end break;end if (v261==1) then v264=v100[v262] + v263 ;v100[v262]=v264;v261=2;end end end elseif (v103<=32) then if (v103<=29) then if (v103==28) then local v176=v102[2 -0 ];do return v100[v176](v21(v100,v176 + (1188 -(1069 + 118)) ,v102[3]));end else local v177=v102[2];v100[v177]=v100[v177]();end elseif (v103<=30) then v100[v102[2]][v100[v102[3]]]=v102[8 -4 ];elseif (v103>31) then do return v100[v102[2]]();end else v100[v102[2]]=v59[v102[3]];end elseif (v103<=34) then if (v103==33) then v100[v102[2]]();else local v181=0;local v182;local v183;local v184;local v185;while true do if (v181==0) then v182=v102[2];v183,v184=v93(v100[v182](v21(v100,v182 + 1 ,v95)));v181=1;end if (v181==1) then v95=(v184 + v182) -(1 -0) ;v185=0;v181=2;end if (v181==2) then for v329=v182,v95 do v185=v185 + 1 ;v100[v329]=v183[v185];end break;end end end elseif (v103<=35) then local v186=v102[2];v100[v186](v100[v186 + 1 ]);elseif (v103>(7 + 29)) then if  not v100[v102[2]] then v94=v94 + 1 ;else v94=v102[4 -1 ];end else v100[v102[2]]=v41(v91[v102[3]],nil,v60);end elseif (v103<=56) then if (v103<=46) then if (v103<=41) then if (v103<=39) then if (v103>38) then v100[v102[2]]=v100[v102[3]]%v100[v102[4]] ;else local v188=0;local v189;while true do if (v188==0) then v189=v102[2];v100[v189]=v100[v189]();break;end end end elseif (v103>40) then local v190=v102[2];v100[v190]=v100[v190](v21(v100,v190 + 1 ,v102[3]));else v100[v102[2]]();end elseif (v103<=43) then if (v103>42) then do return v100[v102[2]]();end else v100[v102[2 + 0 ]]=v102[3] + v100[v102[4]] ;end elseif (v103<=44) then v94=v102[3];elseif (v103>45) then v100[v102[2]]=v41(v91[v102[794 -(368 + 423) ]],nil,v60);else local v269=v102[2];v100[v269](v21(v100,v269 + 1 ,v102[3]));end elseif (v103<=(160 -109)) then if (v103<=48) then if (v103==47) then local v194=v102[2];local v195=v100[v194];for v240=v194 + 1 ,v95 do v15(v195,v100[v240]);end else v100[v102[20 -(10 + 8) ]]={};end elseif (v103<=49) then v100[v102[2]]={};elseif (v103>50) then local v270=0;local v271;local v272;local v273;local v274;while true do if (v270==2) then for v354=v271,v95 do v274=v274 + (3 -2) ;v100[v354]=v272[v274];end break;end if (v270==1) then v95=(v273 + v271) -(3 -2) ;v274=442 -(416 + 26) ;v270=2;end if (v270==0) then v271=v102[2];v272,v273=v93(v100[v271](v21(v100,v271 + 1 ,v95)));v270=1;end end else local v275=0;local v276;while true do if (v275==0) then v276=v102[2];do return v100[v276](v21(v100,v276 + 1 ,v102[2 + 1 ]));end break;end end end elseif (v103<=53) then if (v103==52) then local v198=v102[2];v100[v198](v21(v100,v198 + 1 ,v102[3]));else for v241=v102[2],v102[3] do v100[v241]=nil;end end elseif (v103<=54) then local v199=v102[2];v100[v199](v21(v100,v199 + 1 ,v95));elseif (v103>55) then v94=v102[3];else v100[v102[2]]=v100[v102[3]]%v102[4] ;end elseif (v103<=65) then if (v103<=60) then if (v103<=58) then if (v103>57) then local v200=0;local v201;local v202;local v203;local v204;while true do if (2==v200) then for v333=v201,v95 do v204=v204 + 1 ;v100[v333]=v202[v204];end break;end if (1==v200) then v95=(v203 + v201) -1 ;v204=0 -0 ;v200=2;end if (v200==0) then v201=v102[2];v202,v203=v93(v100[v201](v21(v100,v201 + 1 ,v102[3])));v200=1;end end else v100[v102[2]][v100[v102[3]]]=v100[v102[4]];end elseif (v103==59) then local v207=0;local v208;while true do if (0==v207) then v208=v102[2];do return v21(v100,v208,v95);end break;end end else local v209=0;local v210;while true do if (v209==0) then v210=v102[2];v100[v210]=v100[v210](v21(v100,v210 + 1 ,v95));break;end end end elseif (v103<=62) then if (v103>61) then local v211=v102[2];local v212=v100[v211];local v213=v100[v211 + 2 ];if (v213>0) then if (v212>v100[v211 + 1 ]) then v94=v102[3];else v100[v211 + 3 ]=v212;end elseif (v212<v100[v211 + 1 ]) then v94=v102[3];else v100[v211 + 3 ]=v212;end else local v214=0;local v215;while true do if (0==v214) then v215=v102[2];v100[v215]=v100[v215](v21(v100,v215 + 1 ,v95));break;end end end elseif (v103<=63) then local v216=0;local v217;local v218;while true do if (v216==0) then v217=v102[2];v218=v100[v102[3]];v216=1;end if (v216==1) then v100[v217 + 1 ]=v218;v100[v217]=v218[v102[4]];break;end end elseif (v103==64) then local v279=v102[2];local v280=v100[v279 + 2 ];local v281=v100[v279] + v280 ;v100[v279]=v281;if (v280>0) then if (v281<=v100[v279 + 1 ]) then v94=v102[3];v100[v279 + 3 ]=v281;end elseif (v281>=v100[v279 + 1 ]) then local v359=0;while true do if (v359==0) then v94=v102[3];v100[v279 + 3 ]=v281;break;end end end elseif v100[v102[2]] then v94=v94 + 1 ;else v94=v102[3];end elseif (v103<=70) then if (v103<=67) then if (v103==66) then v100[v102[2]]= #v100[v102[3]];else v100[v102[2]]=v102[3];end elseif (v103<=68) then v100[v102[440 -(145 + 293) ]]=v60[v102[3]];elseif (v103>69) then local v283=0;local v284;while true do if (v283==0) then v284=v102[2];do return v21(v100,v284,v95);end break;end end else v100[v102[2]]=v59[v102[3]];end elseif (v103<=72) then if (v103>71) then if (v100[v102[2]]==v102[4]) then v94=v94 + (431 -(44 + 386)) ;else v94=v102[3];end else v100[v102[2]]=v100[v102[3]][v102[4]];end elseif (v103<=73) then for v243=v102[2],v102[3] do v100[v243]=nil;end elseif (v103==74) then local v288=0;local v289;local v290;local v291;while true do if (v288==0) then v289=v91[v102[3]];v290=nil;v288=1;end if (v288==2) then for v360=1,v102[4] do local v361=0;local v362;while true do if (v361==1) then if (v362[1]==14) then v291[v360-1 ]={v100,v362[775 -(201 + 571) ]};else v291[v360-1 ]={v59,v362[3]};end v99[ #v99 + 1 ]=v291;break;end if (v361==0) then v94=v94 + 1 + 0 ;v362=v90[v94];v361=1;end end end v100[v102[2]]=v41(v289,v290,v60);break;end if (v288==1) then v291={};v290=v18({},{[v7("\207\47\95\188\244\21\78","\210\144\112\54")]=function(v363,v364) local v365=v291[v364];return v365[1487 -(998 + 488) ][v365[2]];end,[v7("\185\17\163\26\76\186\38\143\131\54","\235\230\78\205\127\59\211\72")]=function(v366,v367,v368) local v369=0;local v370;while true do if (v369==0) then v370=v291[v367];v370[1][v370[1 + 1 ]]=v368;break;end end end});v288=2;end end else v100[v102[2]][v100[v102[3]]]=v100[v102[4]];end v94=v94 + 1 ;break;end if (v113==0) then v102=v90[v94];v103=v102[1];v113=1;end end end end;end if (0==v61) then v62=v58[1 -0 ];v63=v58[2];v61=1;end end end return v41(v40(),{},v28)(...);end if (v29==4) then v39=nil;function v39(...) return {...},v20("#",...);end v40=nil;function v40() local v65=0;local v66;local v67;local v68;local v69;local v70;local v71;while true do if (v65==1) then v69={v66,v67,nil,v68};v70=v35();v71={};v65=2;end if (v65==0) then v66={};v67={};v68={};v65=1;end if (v65==3) then for v104=1,v35() do v67[v104-1 ]=v40();end return v69;end if (v65==2) then for v106=1,v70 do local v107=0;local v108;local v109;while true do if (v107==0) then v108=v33();v109=nil;v107=1;end if (v107==1) then if (v108==1) then v109=v33()~=0 ;elseif (v108==2) then v109=v36();elseif (v108==3) then v109=v37();end v71[v106]=v109;break;end end end v69[3]=v33();for v110=1,v35() do local v111=v33();if (v32(v111,1,928 -(214 + 713) )==0) then local v114=v32(v111,2,3);local v115=v32(v111,4,6);local v116={v34(),v34(),nil,nil};if (v114==0) then v116[3]=v34();v116[1 + 3 ]=v34();elseif (v114==1) then v116[3]=v35();elseif (v114==2) then v116[3]=v35() -(2^16) ;elseif (v114==3) then v116[880 -(282 + 595) ]=v35() -(2^16) ;v116[4]=v34();end if (v32(v115,1,1)==(1638 -(1523 + 114))) then v116[2]=v71[v116[2]];end if (v32(v115,2,2)==1) then v116[3 + 0 ]=v71[v116[3]];end if (v32(v115,3,3)==1) then v116[4]=v71[v116[4]];end v66[v110]=v116;end end v65=3;end end end v29=5;end if (v29==2) then function v34() local v72,v73=v9(v27,v30,v30 + 2 );v30=v30 + 2 ;return (v73 * 256) + v72 ;end v35=nil;function v35() local v74,v75,v76,v77=v9(v27,v30,v30 + 3 );v30=v30 + (7 -3) ;return (v77 * (43216383 -26439167)) + (v76 * 65536) + (v75 * 256) + v74 ;end v36=nil;v29=3;end end end return vv17(),...);
-- âڑ ï¸ڈ WARNING: integrity protected!
--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.3) ~  Much Love, Ferib 

]]--
